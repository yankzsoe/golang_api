definitions:
  dtos.CreateOrUpdateUserRequest:
    properties:
      confirmPassword:
        minLength: 5
        type: string
      email:
        type: string
      nickname:
        type: string
      password:
        minLength: 5
        type: string
      roleId:
        type: string
      username:
        type: string
    required:
    - confirmPassword
    - email
    - password
    - roleId
    - username
    type: object
  dtos.CreateUpdateModuleRequest:
    properties:
      name:
        type: string
      remark:
        type: string
    required:
    - name
    type: object
  dtos.CreateUpdateRoleRequest:
    properties:
      is_active:
        type: boolean
      name:
        type: string
    required:
    - name
    type: object
  dtos.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dtos.RefreshTokenRequest:
    properties:
      token:
        type: string
    type: object
  dtos.RoleModule:
    properties:
      canCreate:
        type: boolean
      canDelete:
        type: boolean
      canRead:
        type: boolean
      canUpdate:
        type: boolean
      moduleId:
        type: string
    required:
    - moduleId
    type: object
  dtos.RoleWithModuleRequest:
    properties:
      modules:
        items:
          $ref: '#/definitions/dtos.RoleModule'
        type: array
      roleId:
        type: string
      roleName:
        type: string
    type: object
info:
  contact:
    email: yankzsoe@gmail.com
    name: API Support
    url: https://www.linkedin.com/in/yayang-suryana-308a5213a/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /auth/refreshToken:
    post:
      consumes:
      - application/json
      description: refresh token to extend token's active period
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.RefreshTokenRequest'
      produces:
      - application/json
      responses: {}
      summary: Refresh Token
      tags:
      - Authentication
  /auth/requestToken:
    post:
      consumes:
      - application/json
      description: Request Token for Authorization or you can login with gmail from
        this link [https://golang-api-6ej0.onrender.com/api/v1/auth/external/google]
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginRequest'
      produces:
      - application/json
      responses: {}
      summary: Request Token
      tags:
      - Authentication
  /module:
    get:
      consumes:
      - application/json
      description: Get All Module Data
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      - in: query
        name: where
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get All Module Data
      tags:
      - Module
    post:
      consumes:
      - application/json
      description: Create Module Data
      parameters:
      - description: Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUpdateModuleRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create Module Data
      tags:
      - Module
  /module/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Module Data
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Delete Module Data
      tags:
      - Module
    get:
      consumes:
      - application/json
      description: Get Module Data By ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get Module Data
      tags:
      - Module
    put:
      consumes:
      - application/json
      description: Update Module Data
      parameters:
      - description: Parameters
        in: path
        name: id
        required: true
        type: string
      - description: Module
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUpdateModuleRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update Module Data
      tags:
      - Module
  /module/name/{name}:
    get:
      consumes:
      - application/json
      description: Get Module Data By Name
      parameters:
      - description: Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get Module Data
      tags:
      - Module
  /role:
    get:
      consumes:
      - application/json
      description: Get All Role Data
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      - in: query
        name: where
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get All Role Data
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Create Role Data
      parameters:
      - description: Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUpdateRoleRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Create Role Data
      tags:
      - Role
  /role/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Role Data
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Delete Role Data
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: Get Role Data By ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get Role Data
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: Update Role Data
      parameters:
      - description: Parameters
        in: path
        name: id
        required: true
        type: string
      - description: Role
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUpdateRoleRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update Role Data
      tags:
      - Role
  /role/module/{name}:
    get:
      consumes:
      - application/json
      description: Get Role With Module Data By Name
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get Role With Module Data
      tags:
      - Role
  /role/module/set/{id}:
    put:
      consumes:
      - application/json
      description: Update Role Data
      parameters:
      - description: Parameters
        in: path
        name: id
        required: true
        type: string
      - description: Role
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.RoleWithModuleRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Update Role Data
      tags:
      - Role
  /role/name/{name}:
    get:
      consumes:
      - application/json
      description: Get Role Data By Name
      parameters:
      - description: Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get Role Data
      tags:
      - Role
  /user/:
    get:
      consumes:
      - application/json
      description: Get All User Account
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      - in: query
        name: where
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get All User Data
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Add new fake User Account
      parameters:
      - description: User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateOrUpdateUserRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Post User Data
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User Account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Delete User Data
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User Account
      parameters:
      - description: ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get User Data
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User Account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateOrUpdateUserRequest'
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Put User Data
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
